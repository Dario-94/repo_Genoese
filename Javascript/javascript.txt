Javascript:
-Linguaggio Javascript è molto elastico
-Non si rompe in caso di errore
-Copy and paste spesso funziona
-Librerie Open Source spesso fanno il loro dovere.

JSFiddle-> utile per eseguire javascript
Developer Tool Console
Editor
Browser
JS engine

Linguaggio di scripting orientato agli oggetti, utilizzato in web browser per pagine dinamiche e per migliorare la user interaction.

Brendan Eich.
Creatore del Javascript, ora CTO a Mozilla Corp.

John Resig.

Douglas Crockford.

Nicholas C. Zakas.

- codice inline 

- blocco di codice nella pagina

-javascript esterno

var variabile = 5;

variabili sono case sensitive (variabile != Variabile)

è possibile assegnare ad una variabile il contenuto di un'altra variabile.
es. mySecondVariable = myFirstVariable

Array si definiscono in questo modo:
var myArray = newArray()

Typeof()--> stampi il tipo di variabile.

new Date() stampa la data e l'ora in questo momento.

All'interno di date possiamo passare parametri (anno,mese,giorno,ora,minuto,secondo,millisecondo).

I metodi, eseguiti sulle istanze, si eseguono con questa struttura: oggetto.metodo();

getDate()-> Ritorna il giorno del mese.
getDay()-> Ritorno il giorno della settimana
getFullYear()-> Ritorna l'anno
getHours()-> Ritorna l'ora
getMilliseconds()-> Ritorna i millisecondi
getMinutes()-> Ritorna i minuti
getSeconds()-> Ritorna i secondi

Per ricavare i millisecondi da quando sono nato:
var a = new Date(1994,7,18);
var b = new Date();

alert(b-a);

var a = new Date();
var b = new Date(1988,9,11);

Per ricavare l'anno bisestile
function bisestile(a){
if ((a %4 == 0 && a % 100 != 0) || a %400 == 0){
	console.log(a+" è bisestile");
}
	else{
		console.log(a+" non è bisestile");
	}
}

bisestile(b.getFullYear());
bisestile(a.getFullYear());

"use strict" 

lo scope in javascript è il corpo della funzione, var è importantissimo da utilizzare.

Stampa "oggi è il 29 Gennaio, è venerdì!! Alle 10:00 va tutto bene!!"

var today = new Date;

var mesi = [
"Gennaio",
"Febbraio",
"Marzo",
"Aprile",
"Maggio",
"Giugno",
"Luglio",
"Agosto",
"Settembre",
"Ottobre",
"Novembre",
"Dicembre"
];

var giorni = [
"Lunedì",
"Martedì",
"Mercoledì",
"Giovedì",
"Venerdì",
"Sabato",
"Domenica"
];

alert("oggi è il "+ today.getDate()+" "+ mesi[today.getMonth()]+", è "+ giorni[today.getDate()]+"!! alle "+ today.getHours()+" : "+ today.getMinutes()+" va tutto bene");

Calcolatrice JS

function calc(a,b,c){
	if(c == "+"){
  	return (a + b);
  }
  	else if (c == "-"){
    	return (a - b);
    }
    else if (c == "*"){
    	return (a * b);
    }
    else if (c == "/"){
    	return (a / b);
    }
    else if (c == "%"){
    	return (a % b);
    }
    else {
    	return false;
    }
}

alert(calc(52,107,'+'));

Math.random() genera numeri casuali
Math.ceil() arrotonda al numero successivo
Math.sqrt(num) radice quadrata 
Math.pow(base, esponente) potenza

Per creare un nuovo oggetto utilizziamo il costruttore new 


var person = new Object();
person.name = "Dario"; //proprietà, ovvero aggiungo un campo all'istanza
person.surname = "Genoese";
person.getFullName = function(){
	return this.name+" "+this.surname;
}
console.log(
	person.getFullName()
);


Calcolare l'area di un triangolo.
var triangolo = new Object();
triangolo.l1 = 15;
triangolo.l2 = 10;
triangolo.l3 = 8;

triangolo.Perimetro = function(){
	return (this.l1 + this.l2 + this.l3)/2;
}

triangolo.CalcoloArea = function(){
	return (Math.sqrt (
  this.Perimetro() * (
  	(this.Perimetro() - this.l1) * 
    (this.Perimetro() - this.l2) * 
    (this.Perimetro() - this.l3)))
    )
}
   


console.log(triangolo.CalcoloArea());


function Person(name, surname, age){
	this.name = name;
  this.surname = surname;
  this.age = age;
}

var person = new Person("Dario", "Genoese", 21);

console.dir(person);

Tramite prototype tutte le classi Person ereditano la funzione all'interno del prototype:
  function Person(name, surname, age){
    this.name = name;
    this.surname = surname;
    this.age = age;
  }

  Person.prototype = {
    constructor: Person,
    sayName: function(){
      console.log(this.name+" "+this.surname);
    },
    getAge: function(){
      return this.age;
    }
  }
  
  var p1 = new Person("Dario", "Genoese", 21);
  
  console.dir(p1);